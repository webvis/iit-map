{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\CNRResults.svelte",
    "..\\..\\RoomPeopleList.svelte",
    "..\\..\\FloorLayersCtrl.svelte",
    "..\\..\\InfoBox.svelte",
    "..\\..\\InfoBoxHeader.svelte",
    "..\\..\\Mark.svelte",
    "..\\..\\Marker.svelte",
    "..\\..\\OmniBox.svelte",
    "..\\..\\Placemark.svelte",
    "..\\..\\ResultsBox.svelte",
    "..\\..\\View.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\timport { onMount } from 'svelte'\r\n\r\n\timport * as d3 from 'd3'\r\n\r\n\timport { selection, select, selected_id, results, current_layer } from './core/stores.js'\r\n\r\n\timport View from './core/View.svelte'\r\n\timport Layer from './core/Layer.svelte'\r\n\timport InfoBox from './core/InfoBox.svelte'\r\n    import InfoBoxHeader from './core/InfoBoxHeader.svelte'\r\n\timport OmniBox from './core/OmniBox.svelte'\r\n\timport FloorLayersCtrl from './core/FloorLayersCtrl.svelte'\r\n\timport InlineSVG from './core/InlineSVG.svelte'\r\n\timport SVGLayers from './core/SVGLayers.svelte'\r\n\timport ResultsBox from './core/ResultsBox.svelte'\r\n\timport Marker from './core/Marker.svelte'\r\n\timport Mark from './core/Mark.svelte'\r\n\r\n\t// application-specific code\r\n\timport { rooms, pois, room_positions, people, search, getQualifica, getImmagine } from './storesCNR.js'\r\n\r\n\timport RoomInfo from './RoomInfo.svelte'\r\n\timport PersonInfo from './PersonInfo.svelte'\r\n\timport RoomPeopleList from './RoomPeopleList.svelte'\r\n\timport CNRResults from './CNRResults.svelte'\r\n\r\n\timport { Content } from '@smui/card'\r\n\t\r\n\tfunction postprocessLayers(layers) {\r\n\t\tlet new_room_positions = new Map()\r\n\t\tlayers.forEach((layer, layer_id) => {\r\n\t\t\td3.select(layer).selectAll('.selectable').each(function () {\r\n\t\t\t\tlet id = d3.select(this).attr('id')\r\n\t\t\t\tnew_room_positions.set( id, {...centroid(this), layers: new Set([layer_id])} )\r\n\t\t\t})\r\n\t\t\t$room_positions = new_room_positions\r\n\r\n\t\t\td3.select(layer).selectAll('.selectable').on('click', function () {\r\n\t\t\t\tlet id = d3.select(this).attr('id')\r\n\t\t\t\tselect(id)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t// FIXME to be moved in utils\r\n\tfunction centroid(path) {\r\n\t\t// return the centroid of a given SVG path (considering vertexes only and ignoring curves)\r\n\t\tlet points = []\r\n\t\tpath.getPathData({normalize: true}).forEach(d => {\r\n\t\t\tif(d.type == 'Z')\r\n\t\t\t\treturn\r\n\r\n\t\t\t// last two values are always a point in M, C and L commands\r\n\t\t\tpoints.push({x: d.values[d.values.length-2], y: d.values[d.values.length-1]})\r\n\t\t})\r\n\t\t\r\n\t\t// centroid of vertexes\r\n\t\tlet sum_p = points.reduce(((a, p) => ({x: a.x+p.x, y: a.y+p.y})), {x: 0, y: 0})\r\n\t\treturn {x: sum_p.x/points.length, y: sum_p.y/points.length}\r\n\t}\r\n\r\n\tfunction updateSelection(_) {\r\n\t\tif($rooms.has($selected_id))\r\n\t\t\t$selection = $rooms.get($selected_id)\r\n\t\telse if($people.has($selected_id))\r\n\t\t\t$selection = $people.get($selected_id)\r\n\t\telse if($pois.has($selected_id))\r\n\t\t\t$selection = $pois.get($selected_id)\r\n\t\telse\r\n\t\t\t$selection = null\r\n\t}\r\n\r\n\tselected_id.subscribe(updateSelection)\r\n\trooms.subscribe(updateSelection)\r\n\r\n\tfunction handleSearch(e) {\r\n\t\t$results = search(e.detail.query)\r\n\t}\r\n\r\n\tconst category_colors = {\r\n\t\t'food_and_drinks': '#f57f17',\r\n\t\t'mobility': '#00b0ff',\r\n\t\t'emergency': '#db4437',\r\n\t\t'services': '#6b7de3',\r\n\t\t'commercial': '#5491f5',\r\n\t\t'entrance': '#f5f5f5'\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t/* FIXME? global deafults? */\r\n\t:global(html), :global(body) {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t.wrapper {\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\toverflow-y: auto;\r\n\t\toverflow-x: hidden;\r\n\t\tposition: absolute;\r\n\t}\r\n\r\n\t:global(a), :global(a:hover), :global(a:visited) {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: var(--primary-bg-color);\r\n\t}\r\n\t:global(a:hover) {\r\n\t\ttext-decoration: underline;\r\n\t}\r\n\r\n\t/* application-specific */\r\n\t\r\n\t/* define global CSS */\r\n\t:global(.infobox) {\r\n\t\twidth: 350px;\r\n\t}\r\n\t:global(.omnibox) {\r\n\t\twidth: 350px;\r\n\t}\r\n\t:global(.view) {\r\n\t\tbackground: #cedbb9;\r\n\t}\r\n\r\n\t:global(.selectable) {\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t:global(.room) {\r\n\t\tfill: #ffd993;\r\n\t\tstroke: #757575;\r\n\t\tstroke-width: 3.2;\r\n\t}\r\n\t:global(.room:hover) {\r\n\t\tfill: orange;\r\n\t}\r\n\r\n\t.logo {\r\n\t\tposition: fixed;\r\n\t\tbottom: 20px;\r\n\t\tleft: calc(50% - var(--logo-width)/2);\r\n\t\twidth: var(--logo-width);\r\n\t\tpointer-events: none;\r\n\t\t--logo-width: 60px;\r\n\t}\r\n\tfooter {\r\n\t\tposition: fixed;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tfont-size: 10px;\r\n\t\tbackground: rgba(255,255,255,0.6);\r\n\t\tpadding: 2px;\r\n\t}\r\n\r\n\t:global(:root) {\r\n\t\t--infobox-header-height: 86px;\r\n\t\t--omnibox-margin: 10px;\r\n\t}\r\n</style>\r\n\r\n<div class=\"wrapper\">\r\n\r\n<View viewBox=\"1950 1400 5480 4770\" placemark_icon={ $selection && $selection.icon ? $selection.icon : $selection && $selection.type == 'person' ? 'person' : 'sensor_door' }>\r\n\t<SVGLayers\r\n\t\tpath=\"data/cnr_flat.svg\"\r\n\t\tnames=\"T 1 2\"\r\n\t\tmode=\"floor\"\r\n\t\tpostprocess={postprocessLayers}\r\n\t/>\r\n\t<Layer name=\"pois\">\r\n\t\t{#each Array.from($pois.values()) as poi}\r\n\t\t\t<Marker position={poi.position} on:click={() => select(poi.id) }>\r\n\t\t\t\t<Mark\r\n\t\t\t\t\ticon={poi.icon}\r\n\t\t\t\t\ttext={poi.text}\r\n\t\t\t\t\tfg={poi.category == 'entrance' ? '#0d5784' : undefined}\r\n\t\t\t\t\tbg={poi.category ? category_colors[poi.category] : undefined}\r\n\t\t\t\t\tshape={poi.shape}\r\n\t\t\t\t/>\r\n\t\t\t</Marker>\r\n\t\t{/each}\r\n\t</Layer>\r\n</View>\r\n\r\n<FloorLayersCtrl/>\r\n\r\n<img src=\"assets/IIT+CNR-RGB-logos.svg\" alt=\"IIT-CNR logo\" class=\"logo\"/>\r\n\r\n<footer>Made with <a href=\"https://github.com/webvis/iit-map\">Map</a>, by HCT@IIT-CNR</footer>\r\n\r\n<OmniBox on:search={handleSearch}>\r\n\t<ResultsBox>\r\n\t\t<CNRResults/>\r\n\t</ResultsBox>\r\n</OmniBox>\r\n\r\n<InfoBox>\r\n\t{#if $selection.type == 'room'}\r\n\t\t<InfoBoxHeader title=\"{$selection.stanza}\" subtitle=\"Ufficio\"/>\r\n\t\t<RoomInfo/>\r\n\t\t<hr/>\r\n\t\t<RoomPeopleList/>\r\n\t{:else if $selection.type == 'person'}\r\n\t\t<InfoBoxHeader title=\"{$selection.nome} {$selection.cognome}\" subtitle=\"{getQualifica($selection)}\" depiction={getImmagine($selection)} depictionSize=\"contain\"/>\r\n\t\t<PersonInfo/>\r\n\t\r\n\t\t{#if $selection.sede}\r\n\t\t\t<hr/>\r\n\t\t\t<Content>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tr><td>Sede</td><td>{$selection.sede == \"pi\" ? \"Area della Ricerca di Pisa\" : $selection.sede == \"cs\" ? \"UOS Cosenza\" : \"\"}</td></tr>\r\n\t\t\t\t</table>\r\n\t\t\t</Content>\r\n\t\t{/if}\r\n\t\t\r\n\t\t{#if $selection.stanza}\r\n\t\t\t<hr/>\r\n\t\t\t<RoomInfo/>\r\n\t\t{/if}\r\n\t{:else if $selection.type == 'poi'}\r\n\t\t{#if $selection.category == 'entrance'}\r\n\t\t\t<InfoBoxHeader title=\"Ingresso {$selection.text}\" subtitle=\"Ingresso\"/>\r\n\t\t{/if}\r\n\t{/if}\r\n</InfoBox>\r\n\r\n</div>\r\n<!--\r\n<View viewBox=\"0 0 800 800\">\r\n\t<Layer name=\"T\" type=\"floor\">\r\n\t\t<InlineSVG path='data/floor0.svg'/>\r\n\t</Layer>\r\n\t<Layer name=\"1\" type=\"floor\">\r\n\t\t<InlineSVG path='data/floor1.svg'/>\r\n\t</Layer>\r\n\t<Layer name=\"2\" type=\"floor\">\r\n\t\t<InlineSVG path='data/floor2.svg'/>\r\n\t</Layer>\r\n</View>\r\n-->",
    "<script>\r\n    import { results } from './core/stores.js'\r\n    import { getQualifica } from './storesCNR.js'\r\n    \r\n    import List, {Item, Text, Graphic} from '@smui/list'\r\n</script>\r\n\r\n<style>\r\n    a, a:hover, a:visited {\r\n        color: inherit;\r\n        text-decoration: none;\r\n    }\r\n    :global(.cnr-results .mdc-list-item__graphic) {\r\n        margin-right: 16px;\r\n    }\r\n    .secondary {\r\n        margin-left: 4px;\r\n        color: var(--light-fg-color);\r\n    }\r\n</style>\r\n\r\n\r\n<List singleSelection class=\"cnr-results\">\r\n    {#each $results as r}\r\n        {#if r.type == 'person'}\r\n            <a href=\"#{r.email}\">    \r\n                <Item>\r\n                    <Graphic class=\"material-icons\">person</Graphic>\r\n                    <Text>{r.nome} {r.cognome} <span class=\"secondary\">{getQualifica(r)}</span></Text>\r\n                </Item>\r\n            </a>\r\n        {:else if r.type == 'room'}\r\n            <a href=\"#{r.id}\">    \r\n                <Item>\r\n                    <Graphic class=\"material-icons\">meeting_room</Graphic>\r\n                    <Text>{r.id} <span class=\"secondary\">Ufficio - Edificio {r.edificio}, Piano {r.piano}</span></Text>\r\n                </Item>\r\n            </a>\r\n        {/if}\r\n    {/each}\r\n</List>\r\n",
    "<script>\r\n    import { selection } from './core/stores.js'\r\n    import { getQualifica, getImmagine } from './storesCNR.js'\r\n\r\n    import List, {Item, Graphic, Text, PrimaryText, SecondaryText} from '@smui/list'\r\n</script>\r\n\r\n<style>\r\n    a, a:hover, a:visited {\r\n        color: inherit;\r\n        text-decoration: none;\r\n    }\r\n</style>\r\n\r\n<List twoLine avatarList singleSelection>\r\n\t{#each $selection.people as person}\r\n        <a href=\"#{person.email}\">    \r\n            <Item>\r\n                <Graphic style=\"background: {getImmagine(person)} rgb(221,221,221); background-position-x: center!important; background-size: cover!important; background-repeat: no-repeat!important;\" />\r\n                <Text>\r\n                    <PrimaryText>{person.nome} {person.cognome}</PrimaryText>\r\n                    <SecondaryText>{getQualifica(person)}</SecondaryText>\r\n                </Text>\r\n            </Item>\r\n        </a>\r\n    {/each}\r\n</List>",
    "<script>\r\n\timport { layers, current_layer, selectLayer, selected_id } from './stores.js'\r\n\r\n\tfunction handleClick(layer) {\r\n        selectLayer(layer.name)\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.floor_layers_ctrl {\r\n\t\tbottom: 0;\r\n        right: 0;\r\n\t\tposition: fixed;\r\n        box-shadow: var(--float-box-shadow);\r\n\t\tborder-radius: var(--float-border-radius);\r\n\t\tbackground: white;\r\n    \tmargin: 20px;\r\n        overflow: hidden;\r\n\t}\r\n\t.layer_btn {\r\n        position: relative;\r\n\t\tdisplay: block;\r\n\t\tbox-sizing: border-box;\r\n\t\twidth: 48px;\r\n\t\theight: 48px;\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.layer_btn > * {\r\n\t\tposition: absolute;\r\n\t\twidth: 48px;\r\n\t\tbottom: 16px;\r\n\t\tfont-size: 16px;\r\n\t\ttext-transform: uppercase;\r\n\t}\r\n    .visible {\r\n        font-weight: bold;\r\n    }\r\n\t.current {\r\n        background: var(--primary-bg-color);\r\n        color: var(--primary-fg-color);\r\n\t}\r\n\r\n\t@media only screen and (max-width: 600px) {\r\n\t\t.floor_layers_ctrl.isIdSelected {\r\n\t\t\tbottom: var(--infobox-header-height);\r\n\t\t}\r\n\t}\r\n</style>\r\n\r\n{#if $layers}\r\n<div class=\"floor_layers_ctrl\" class:isIdSelected={$selected_id != ''}>\r\n\t{#each Array.from($layers.values()).filter(d => d.type == 'floor').reverse() as layer}\r\n\t\t<div class=\"layer_btn\" on:click=\"{() => handleClick(layer)}\" class:visible=\"{layer.visible}\" class:current=\"{layer == $current_layer}\"><div>{layer.name}</div></div>\r\n\t{/each}\r\n</div>\r\n{/if}",
    "<script>\r\n\timport { selected_id, selection } from './stores.js'\r\n\r\n\timport Card from '@smui/card'\r\n\timport LinearProgress from '@smui/linear-progress'\r\n</script>\r\n\r\n<style>\r\n\t.infobox {\r\n\t\tposition: relative;\r\n    \tmargin: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t\tpointer-events: auto;\r\n\t}\r\n\r\n\t:global(.infobox table) {\r\n        border-spacing: 0;\r\n    }\r\n\r\n    :global(.infobox td:first-child) {\r\n        width: 80px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    :global(.infobox tr:not(:last-child) > td) {\r\n        padding-bottom: 6px;\r\n    }\r\n\r\n\t@media only screen and (max-width: 600px) {\r\n\t\t.infobox {\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 100%;\r\n\t\t\tmargin: 0 !important;\r\n\t\t\ttop: calc(100% - var(--infobox-header-height));\r\n\t\t}\r\n\t}\r\n\r\n</style>\r\n\r\n{#if $selected_id}\r\n\t<div class=\"infobox\">\r\n\t\t<Card class=\"mdc-elevation--z4\" style=\"overflow: hidden;\">\r\n\t\t\t{#if $selection}\r\n\t\t\t\t<slot></slot>\r\n\t\t\t{:else}\r\n\t\t\t\t<LinearProgress indeterminate/>\r\n\t\t\t{/if}\r\n\t\t</Card>\r\n\t</div>\r\n{/if}",
    "<script>\r\n    import { clearSelection } from './stores.js'\r\n\r\n    import { Content, Media, MediaContent, Actions, ActionIcons } from '@smui/card'\r\n    import IconButton from '@smui/icon-button'\r\n\r\n    export let title = 'Title'\r\n    export let subtitle = 'Subtitle'\r\n    export let depiction = null\r\n    export let depictionSize = 'cover'\r\n</script>\r\n\r\n<style>\r\n    h2, h3 {\r\n        margin: 0;\r\n        font-weight: normal;\r\n    }\r\n</style>\r\n\r\n<div style=\"position: absolute; top: 2px; right: -4px;\">\r\n    <Actions>\r\n        <ActionIcons>\r\n            <IconButton class=\"material-icons\" on:click={clearSelection} style=\"color: var(--primary-fg-color);\" title=\"Close\">close</IconButton>\r\n        </ActionIcons>\r\n    </Actions>\r\n</div>\r\n<Content style=\"background: var(--primary-bg-color); color: var(--primary-fg-color);\">\r\n    <h2 class=\"mdc-typography--headline6\">{title}</h2>\r\n    <h3 class=\"mdc-typography--subtitle2\">{subtitle}</h3>\r\n</Content>\r\n{#if depiction}\r\n    <Media style=\"background: {depiction}, linear-gradient(180deg, rgba(245,245,245,0) 0%, rgba(245,245,245,1) 100%); background-size: {depictionSize}; background-position-x: center; background-position-y: center; background-repeat: no-repeat;\" aspectRatio=\"16x9\">\r\n    </Media>\r\n{/if}",
    "<script>\r\n    export let fg = 'white'\r\n    export let bg = '#7b5b5b'\r\n    export let icon = null\r\n    export let text = null\r\n    export let shape = 'circle'\r\n</script>\r\n\r\n<style>\r\n.label {\r\n    font-size: 80px;\r\n    font-weight: bold;\r\n}\r\n</style>\r\n\r\n<g class=\"mark\">\r\n    {#if shape == 'circle'}\r\n        <circle r=\"62\" fill=\"#777\" stroke=\"#777\" stroke-width=\"5\" cy=\"5\"/>\r\n        <circle r=\"62\" fill={bg} stroke={fg} stroke-width=\"7.5\"/>\r\n    {:else if shape == 'square'}\r\n        <rect width=\"124\" height=\"124\" x=\"-62\" y=\"-57\" rx=\"16\" ry=\"16\" fill=\"#777\" stroke=\"#777\" stroke-width=\"5\"/>\r\n        <rect width=\"124\" height=\"124\" x=\"-62\" y=\"-62\" rx=\"16\" ry=\"16\" fill={bg} stroke={fg} stroke-width=\"7.5\"/>\r\n    {/if}\r\n\r\n    {#if text}\r\n        <text class=\"label\" fill={fg} text-anchor=\"middle\" dy=\".4em\">{text}</text>\r\n    {:else if icon}\r\n        <text class=\"material-icons\" fill={fg} transform=\"scale(3.5)\" text-anchor=\"middle\" dy=\".5em\">{icon}</text>\r\n    {/if}\r\n</g>",
    "<script>\r\n    import { current_layer, semantic_zoom } from './stores.js'\r\n\r\n    export let position\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n@media only screen and (max-width: 600px) {\r\n    .marker_content {\r\n        transform: scale(2);\r\n    }\r\n}\r\n</style>\r\n\r\n{#if position.layers.has($current_layer.name)}\r\n<g class=\"selectable marker\" transform=\"translate({position.x},{position.y}) scale({$semantic_zoom})\" on:click>\r\n    <g class=\"marker_content\">\r\n        <slot></slot>\r\n    </g>\r\n</g>\r\n{/if}",
    "<script>\r\n\timport { createEventDispatcher } from 'svelte'\r\n\timport { results, clearSelection } from './stores.js'\r\n\r\n\timport Paper from '@smui/paper'\r\n\timport IconButton from '@smui/icon-button'\r\n\r\n\tlet query\r\n\t\r\n\tconst dispatch = createEventDispatcher()\r\n\r\n\tfunction search(){\r\n\t\tclearSelection()\r\n\t\tdispatch('search', {\r\n\t\t\tquery: query\r\n\t\t})\r\n\t}\r\n\tfunction handleClick(){\r\n\t\tsearch()\r\n\t}\r\n\tfunction handleInput(){\r\n\t\tsearch()\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.omnibox {\r\n\t\tposition: relative;\r\n\t\tmargin: var(--omnibox-margin);\r\n\t\tbox-sizing: border-box;\r\n\t\tpointer-events: auto;\r\n\t}\r\n\t.wrapper {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 4px;\r\n\t}\r\n    input {\r\n        border: none;\r\n        outline: none;\r\n        background: none;\r\n\t\tmargin: 0;\r\n\t\tmargin-left: 8px;\r\n        margin-right: 12px;\r\n        flex-grow: 1;\r\n    }\r\n\t.results {\r\n\t\tflex-grow: 1;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\r\n\t@media only screen and (max-width: 600px) {\r\n\t\t.omnibox {\r\n\t\t\twidth: calc(100% - 2*var(--omnibox-margin));\r\n\t\t\ttop: 0;\r\n\t\t}\r\n\t\t.fullscreen.omnibox {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t\t.fullscreen.omnibox .wrapper {\r\n\t\t\tpadding: 14px;\r\n\t\t}\r\n\t\t.fullscreen.omnibox :global(.smui-paper) {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t}\r\n\r\n</style>\r\n\r\n<div class=\"omnibox\" class:fullscreen={ $results.length > 0 }>\r\n\t<Paper elevation=\"4\" style=\"padding: 0; display: flex; flex-direction: column; height: 100%;\">\r\n\t\t<div class=\"wrapper\">\r\n\t\t\t<input type=\"text\" bind:value={query} placeholder=\"Cerca\" on:input={handleInput}/>\r\n\t\t\t<IconButton style=\"margin: 0;\" class=\"material-icons\" on:click={handleClick}>search</IconButton>\r\n\t\t</div>\r\n\t\t{#if $results.length > 0}\r\n\t\t\t<hr/>\r\n\t\t\t<div class=\"results\">\r\n\t\t\t\t<slot>\r\n\t\t\t\t</slot>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t</Paper>\r\n</div>",
    "<script>\r\n    import { selection, semantic_zoom } from './stores.js'\r\n    \r\n    export let icon\r\n</script>\r\n\r\n<style>\r\n.placemark {\r\n    /*pointer-events: none;*/\r\n}\r\n.arrow {\r\n    fill: var(--primary-bg-color);\r\n    stroke: rgba(0,0,0,0.3);\r\n    stroke-width: 10px;\r\n}\r\n.circle {\r\n    fill: var(--primary-fg-color);\r\n}\r\n.arrow, .circle, text {\r\n    transform: scale(0.75);\r\n}\r\ntext {\r\n    font-size: 160px;\r\n    text-anchor: middle;\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n    .arrow, .circle, text {\r\n        transform: scale(1.5);\r\n    }\r\n}\r\n</style>\r\n\r\n\r\n<g class=\"placemark\" transform=\"translate({$selection.position.x} {$selection.position.y}) scale({$semantic_zoom})\">\r\n    <path class=\"arrow\" d=\"M -5.3702482,-2.4743486 C -10.242286,-6.9402679 -49.955599,-76.685953 -76.604136,-127.57734 c -46.734054,-89.24931 -70.983044,-152.78 -70.949634,-185.88301 0.0573,-54.08193 31.17406,-105.24462 79.068234,-129.9943 22.718226,-11.73981 42.684617,-16.63934 68.03569057,-16.69515 25.97047543,-0.0574 45.83270943,4.7527 68.93380743,16.69303 47.900068,24.75844 79.015178,75.91384 79.069808,129.99642 0.0289,33.02505 -24.36515,97.00116 -70.832446,185.73178 C 50.041984,-76.783702 10.273172,-6.9725157 5.3687427,-2.4743486 3.6921601,-0.93661741 1.6598472,0 3.6115871e-5,0 -1.659415,0 -3.6930899,-0.9370493 -5.3702482,-2.4743486 Z\"/>\r\n    <path class=\"circle\" d=\"m 107.93742,-315.29401 a 107.93743,107.93743 0 1 1 -215.87485,0 107.93743,107.93743 0 1 1 215.87485,0 z\"/>\r\n    {#if icon}\r\n        <text class=\"material-icons\" y=\"-240\">{icon}</text>\r\n    {/if}\r\n</g>",
    "<script>\r\n    import { results } from './stores.js'\r\n</script>\r\n\r\n<style>\r\n\t.box {\r\n\t}\r\n\r\n\t@media only screen and (max-width: 600px) {\r\n\t\t.box {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n</style>\r\n\r\n{#if $results}\r\n\t<div class=\"box\">\r\n\t\t<slot></slot>\r\n\t</div>\r\n{/if}",
    "<script>\r\n\timport * as d3 from 'd3'\r\n\r\n\timport { current_transform, layers, current_layer, selection } from './stores.js'\r\n\timport { onMount } from 'svelte'\r\n\r\n\timport Placemark from './Placemark.svelte'\r\n\r\n\texport let viewBox\r\n\texport let placemark_icon // FIXME expose Placemark component\r\n\t\r\n\tlet svg\r\n\tlet zoom_behavior\r\n\tlet current = false\r\n\t\r\n\tonMount(() => {\r\n\t\t// auto populate layers store from defined Layer components\r\n\t\t$layers = new Map()\r\n\t\tlet first_done = false\r\n\t\tsvg.querySelectorAll('.layer').forEach(layer => {\r\n\t\t\tlet key = layer.getAttribute('data:name')\r\n\t\t\tlet type = layer.getAttribute('data:type')\r\n\t\t\tlet visible = false\r\n\r\n\t\t\t// first base or floor layer visible and current by default\r\n\t\t\tif (!first_done && (type == 'base' || type == 'floor')) {\r\n\t\t\t\tvisible = true\r\n\t\t\t\tfirst_done = true\r\n\t\t\t\tcurrent = true\r\n\t\t\t}\r\n\r\n\t\t\t// overlays are visible by default\r\n\t\t\tif (type == 'overlay') {\r\n\t\t\t\tvisible = true\r\n\t\t\t}\r\n\r\n\t\t\tlet d = {\r\n\t\t\t\tname: key,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tvisible: visible\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$layers.set(key, d)\r\n\r\n\t\t\tif (current) {\r\n\t\t\t\t$current_layer = d\r\n\t\t\t\tcurrent = false\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// enable d3 zoom\r\n\t\tzoom_behavior = d3.zoom()\r\n\t\t\t.scaleExtent([0, Infinity])\r\n\t\t\t.on('zoom', handleZoom)\r\n\r\n\t\td3.select(svg).call(zoom_behavior)\r\n\r\n\t\tfunction handleZoom() {\r\n\t\t\t$current_transform = d3.event.transform\r\n\t\t}\r\n\r\n\t\t// focus to enable keyboard interaction\r\n\t\tsvg.focus()\r\n\t})\r\n\r\n\tfunction scaleBy(k, duration) {\r\n\t\tduration = duration === undefined ? 300 : duration\r\n\t\tzoom_behavior.scaleBy(d3.select(svg).transition().duration(duration), k)\r\n\t}\r\n\r\n\tfunction scaleTo(k, duration) {\r\n\t\tduration = duration === undefined ? 300 : duration\r\n\t\tzoom_behavior.scaleTo(d3.select(svg).transition().duration(duration), k)\r\n\t}\r\n\r\n\tfunction translateBy(x, y, duration) {\r\n\t\tduration = duration === undefined ? 300 : duration\r\n\t\tzoom_behavior.translateBy(d3.select(svg).transition().duration(duration), x, y)\r\n\t}\r\n\r\n\tfunction translateTo(p, duration) {\r\n\t\tduration = duration === undefined ? 1200 : duration\r\n\t\tzoom_behavior.translateTo(d3.select(svg).transition().duration(duration), p.x, p.y)\r\n\t}\r\n\r\n\t// listen to selection changes\r\n\tselection.subscribe(handleNewSelection)\r\n\r\n\tfunction handleNewSelection(d) {\r\n\t\tif(d && d.position) {\r\n\t\t\ttranslateTo(d.position)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleKeyUp(e) {\r\n\t\tconst delta = 500 / $current_transform.k\r\n\r\n\t\t// pan and zoom keyboard control\r\n\t\tswitch(e.key) {\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\t\ttranslateBy(-delta,0)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\t\ttranslateBy(delta,0)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\t\ttranslateBy(0,delta)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\t\ttranslateBy(0,-delta)\r\n\t\t\t\tbreak\r\n\t\t\tcase '+':\r\n\t\t\t\tscaleBy(1.5)\r\n\t\t\t\tbreak\r\n\t\t\tcase '-':\r\n\t\t\t\tscaleBy(0.66)\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.view {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tposition: fixed; /* needed to avoid jumping whenever the hash is changed */\r\n\t}\r\n\t.view:focus {\r\n\t\toutline: none;\r\n\t}\r\n</style>\r\n\r\n<svg class=\"view\" bind:this={svg} {viewBox} tabindex=\"0\" on:keyup={handleKeyUp}>\r\n\t<g transform={$current_transform}>\r\n\t\t<slot></slot>\r\n\t\t{#if $selection && $selection.position}\r\n\t\t\t<Placemark icon={placemark_icon}/> <!-- the Placemark needs to be rescaled when placed -->\r\n\t\t{/if}\r\n\t</g>\r\n</svg>"
  ],
  "names": [],
  "mappings": "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"
}