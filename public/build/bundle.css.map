{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../BaseLayersCtrl.svelte",
    "../../FloorLayersCtrl.svelte",
    "../../InfoBox.svelte",
    "../../InfoBoxHeader.svelte",
    "../../Mark.svelte",
    "../../OmniBox.svelte",
    "../../Placemark.svelte",
    "../../ResultsBox.svelte",
    "../../TracingPaper.svelte",
    "../../View.svelte",
    "../../App.svelte",
    "../../CNRResults.svelte",
    "../../RoomPeopleList.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { layers, selectLayer, selected_id } from './stores.js'\n\n\tfunction handleClick(layer) {\n\t\tselectLayer(layer.name)\n\t}\n</script>\n\n<style>\n\t.base_layers_ctrl {\n\t\tbottom: 0;\n\t\tposition: fixed;\n    \tmargin: 20px;\n\t}\n\t.layer_btn {\n\t\tdisplay: inline-block;\n\t\tbox-sizing: border-box;\n\t\twidth: 60px;\n\t\theight: 60px;\n\t\tmargin-right: 12px;\n\t\tbox-shadow: var(--float-box-shadow);\n\t\tborder-radius: var(--float-border-radius);\n\t\tbackground: white;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t}\n\t.layer_btn > * {\n\t\tposition: absolute;\n\t\twidth: 60px;\n\t\tbottom: 8px;\n\t\tfont-size: 10px;\n\t\ttext-transform: uppercase;\n\t}\n\t.visible {\n\t\tfont-weight: bold;\n\t}\n\n\t@media only screen and (max-width: 600px) {\n\t\t.base_layers_ctrl.isIdSelected {\n\t\t\tbottom: var(--infobox-header-height);\n\t\t}\n\t}\n</style>\n\n{#if $layers}\n<div class=\"base_layers_ctrl\" class:isIdSelected={$selected_id != ''}>\n\t{#each Array.from($layers.values()).filter(d => d.type == 'base') as layer}\n\t\t<div class=\"layer_btn\" on:click=\"{() => handleClick(layer)}\" class:visible=\"{layer.visible}\"><div>{layer.name}</div></div>\n\t{/each}\n</div>\n{/if}",
    "<script>\n\timport { layers, current_layer, selectLayer, selected_id } from './stores.js'\n\n\tfunction handleClick(layer) {\n        selectLayer(layer.name)\n\t}\n</script>\n\n<style>\n\t.floor_layers_ctrl {\n\t\tbottom: 0;\n        right: 0;\n\t\tposition: fixed;\n        box-shadow: var(--float-box-shadow);\n\t\tborder-radius: var(--float-border-radius);\n\t\tbackground: white;\n    \tmargin: 20px;\n        overflow: hidden;\n\t}\n\t.layer_btn {\n        position: relative;\n\t\tdisplay: block;\n\t\tbox-sizing: border-box;\n\t\twidth: 48px;\n\t\theight: 48px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t}\n\t.layer_btn > * {\n\t\tposition: absolute;\n\t\twidth: 48px;\n\t\tbottom: 16px;\n\t\tfont-size: 16px;\n\t\ttext-transform: uppercase;\n\t}\n    .visible {\n        font-weight: bold;\n    }\n\t.current {\n        background: var(--primary-bg-color);\n        color: var(--primary-fg-color);\n\t}\n\n\t@media only screen and (max-width: 600px) {\n\t\t.floor_layers_ctrl.isIdSelected {\n\t\t\tbottom: var(--infobox-header-height);\n\t\t}\n\t}\n</style>\n\n{#if $layers}\n<div class=\"floor_layers_ctrl\" class:isIdSelected={$selected_id != ''}>\n\t{#each Array.from($layers.values()).filter(d => d.type == 'floor').reverse() as layer}\n\t\t<div class=\"layer_btn\" on:click=\"{() => handleClick(layer)}\" class:visible=\"{layer.visible}\" class:current=\"{layer == $current_layer}\"><div>{layer.name}</div></div>\n\t{/each}\n</div>\n{/if}",
    "<script>\n\timport { selected_id, selection } from './stores.js'\n\n\timport Card from '@smui/card'\n\timport LinearProgress from '@smui/linear-progress'\n</script>\n\n<style>\n\t.infobox {\n\t\tposition: relative;\n    \tmargin: 10px;\n\t\tbox-sizing: border-box;\n\t\tpointer-events: auto;\n\t}\n\n\t:global(.infobox table) {\n        border-spacing: 0;\n    }\n\n    :global(.infobox td:first-child) {\n        width: 80px;\n        font-weight: bold;\n    }\n\n    :global(.infobox tr:not(:last-child) > td) {\n        padding-bottom: 6px;\n    }\n\n\t@media only screen and (max-width: 600px) {\n\t\t.infobox {\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\tmargin: 0 !important;\n\t\t\ttop: calc(100% - var(--infobox-header-height));\n\t\t}\n\t}\n\n</style>\n\n{#if $selected_id}\n\t<div class=\"infobox\">\n\t\t<Card class=\"mdc-elevation--z4\" style=\"overflow: hidden;\">\n\t\t\t{#if $selection}\n\t\t\t\t<slot></slot>\n\t\t\t{:else}\n\t\t\t\t<LinearProgress indeterminate/>\n\t\t\t{/if}\n\t\t</Card>\n\t</div>\n{/if}",
    "<script>\n    import { clearSelection } from './stores.js'\n\n    import { Content, Actions, ActionIcons } from '@smui/card'\n    import IconButton from '@smui/icon-button'\n\n    export let title = 'Title'\n    export let subtitle = ''\n</script>\n\n<style>\n    h2, h3 {\n        margin: 0;\n        font-weight: normal;\n    }\n</style>\n\n<div style=\"position: absolute; top: 2px; right: -4px;\">\n    <Actions>\n        <ActionIcons>\n            <IconButton class=\"material-icons\" on:click={clearSelection} style=\"color: var(--primary-fg-color);\" title=\"Close\">close</IconButton>\n        </ActionIcons>\n    </Actions>\n</div>\n<Content style=\"background: var(--primary-bg-color); color: var(--primary-fg-color);\">\n    <h2 class=\"mdc-typography--headline6\">{title}</h2>\n    <h3 class=\"mdc-typography--subtitle2\">{subtitle}</h3>\n</Content>",
    "<script>\n    export let fg = 'white'\n    export let bg = '#7b5b5b'\n    export let icon = null\n    export let text = null\n    export let shape = 'circle'\n</script>\n\n<style>\n.label {\n    font-size: 18px;\n    font-weight: bold;\n}\n</style>\n\n<g class=\"mark\">\n    {#if shape == 'circle'}\n        <circle r=\"14\" cy=\"2\" opacity=\"0.35\" stroke=\"black\" stroke-width=\"2\"/>\n        <circle r=\"14\" fill={bg} stroke={fg} stroke-width=\"2\"/>\n    {:else if shape == 'square'}\n        <rect width=\"28\" height=\"28\" x=\"-14\" y=\"-12\" rx=\"4\" ry=\"4\" opacity=\"0.35\" stroke=\"black\" stroke-width=\"2\"/>\n        <rect width=\"28\" height=\"28\" x=\"-14\" y=\"-14\" rx=\"4\" ry=\"4\" fill={bg} stroke={fg} stroke-width=\"2\"/>\n    {/if}\n\n    {#if text}\n        <text class=\"label\" fill={fg} text-anchor=\"middle\" dy=\".35em\">{text}</text>\n    {:else if icon}\n        <text class=\"material-icons\" fill={fg} transform=\"scale(0.8)\" text-anchor=\"middle\" dy=\".5em\">{icon}</text>\n    {/if}\n</g>",
    "<script>\n\timport { createEventDispatcher } from 'svelte'\n\timport { results, clearSelection } from './stores.js'\n\n\timport Paper from '@smui/paper'\n\timport IconButton from '@smui/icon-button'\n\n\tlet query\n\t\n\tconst dispatch = createEventDispatcher()\n\n\tfunction search(){\n\t\tclearSelection()\n\t\tdispatch('search', {\n\t\t\tquery: query\n\t\t})\n\t}\n\tfunction handleClick(){\n\t\tsearch()\n\t}\n\tfunction handleInput(){\n\t\tsearch()\n\t}\n</script>\n\n<style>\n\t.omnibox {\n\t\tposition: relative;\n\t\tmargin: var(--omnibox-margin);\n\t\tbox-sizing: border-box;\n\t\tpointer-events: auto;\n\t}\n\t.wrapper {\n\t\tdisplay: flex;\n\t\tpadding: 4px;\n\t}\n    input {\n        border: none;\n        outline: none;\n        background: none;\n\t\tmargin: 0;\n\t\tmargin-left: 8px;\n        margin-right: 12px;\n        flex-grow: 1;\n    }\n\t.results {\n\t\tflex-grow: 1;\n\t\toverflow-y: auto;\n\t}\n\n\t@media only screen and (max-width: 600px) {\n\t\t.omnibox {\n\t\t\twidth: calc(100% - 2*var(--omnibox-margin));\n\t\t\ttop: 0;\n\t\t}\n\t\t.fullscreen.omnibox {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin: 0;\n\t\t}\n\t\t.fullscreen.omnibox .wrapper {\n\t\t\tpadding: 14px;\n\t\t}\n\t\t.fullscreen.omnibox :global(.smui-paper) {\n\t\t\tborder-radius: 0;\n\t\t}\n\t}\n\n</style>\n\n<div class=\"omnibox\" class:fullscreen={ $results.length > 0 }>\n\t<Paper elevation=\"4\" style=\"padding: 0; display: flex; flex-direction: column; height: 100%;\">\n\t\t<div class=\"wrapper\">\n\t\t\t<input type=\"text\" bind:value={query} placeholder=\"Search\" on:input={handleInput}/>\n\t\t\t<IconButton style=\"margin: 0;\" class=\"material-icons\" on:click={handleClick}>search</IconButton>\n\t\t</div>\n\t\t{#if $results.length > 0}\n\t\t\t<hr/>\n\t\t\t<div class=\"results\">\n\t\t\t\t<slot>\n\t\t\t\t</slot>\n\t\t\t</div>\n\t\t{/if}\n\t</Paper>\n</div>",
    "<script>\n    import { selection, zoom } from './stores.js'\n    \n    export let icon\n    export let scale = 1\n</script>\n\n<style>\n.placemark {\n    /*pointer-events: none;*/\n}\n.arrow {\n    fill: var(--primary-bg-color);\n    stroke: rgba(0,0,0,0.3);\n    stroke-width: 10px;\n}\n.circle {\n    fill: var(--primary-fg-color);\n}\n.arrow, .circle, text {\n    transform: scale(0.15);\n}\ntext {\n    font-size: 160px;\n    text-anchor: middle;\n}\n</style>\n\n{#if $selection && $selection.position}\n<g class=\"placemark\" transform=\"translate({$selection.position.x} {$selection.position.y}) scale({1/$zoom}) scale({scale})\">\n    <path class=\"arrow\" d=\"M -5.3702482,-2.4743486 C -10.242286,-6.9402679 -49.955599,-76.685953 -76.604136,-127.57734 c -46.734054,-89.24931 -70.983044,-152.78 -70.949634,-185.88301 0.0573,-54.08193 31.17406,-105.24462 79.068234,-129.9943 22.718226,-11.73981 42.684617,-16.63934 68.03569057,-16.69515 25.97047543,-0.0574 45.83270943,4.7527 68.93380743,16.69303 47.900068,24.75844 79.015178,75.91384 79.069808,129.99642 0.0289,33.02505 -24.36515,97.00116 -70.832446,185.73178 C 50.041984,-76.783702 10.273172,-6.9725157 5.3687427,-2.4743486 3.6921601,-0.93661741 1.6598472,0 3.6115871e-5,0 -1.659415,0 -3.6930899,-0.9370493 -5.3702482,-2.4743486 Z\"/>\n    <path class=\"circle\" d=\"m 107.93742,-315.29401 a 107.93743,107.93743 0 1 1 -215.87485,0 107.93743,107.93743 0 1 1 215.87485,0 z\"/>\n    {#if icon}\n        <text class=\"material-icons\" y=\"-240\">{icon}</text>\n    {/if}\n</g>\n{/if}",
    "<script>\n    import { results } from './stores.js'\n</script>\n\n<style>\n\t.box {\n\t}\n\n\t@media only screen and (max-width: 600px) {\n\t\t.box {\n\t\t\t\n\t\t}\n\t}\n\n</style>\n\n{#if $results}\n\t<div class=\"box\">\n\t\t<slot></slot>\n\t</div>\n{/if}",
    "<script>\n    import { viewport } from './stores.js'\n</script>\n\n<style>\n    .tracing_paper {\n        fill: white;\n        fill-opacity: 0.75;\n    }\n</style>\n\n<rect\n    class=\"tracing_paper\"\n    x={ $viewport.x }\n    y={ $viewport.y }\n    width={ $viewport.width }\n    height={ $viewport.height }\n/>",
    "<script>\n\timport * as d3 from 'd3'\n\n\timport { user_transform, viewBoxRect, screen_size, screen_transform, zoom, viewport, settled_zoom, settled_viewport, layers, current_layer, selection } from './stores.js'\n\timport { onMount } from 'svelte'\n\n\texport let viewBox\n\texport let interpolateZoom = d3.interpolate\n\t\n\tlet svg\n\tlet zoom_behavior\n\tlet current = false\n\n\tlet debounce_timeout\n\t\n\tonMount(() => {\n\t\t// store viewBox rect in a global store\n\t\t$viewBoxRect = svg.viewBox.baseVal\n\n\t\t// auto populate layers store from defined Layer components\n\t\t$layers = new Map()\n\t\tlet first_done = false\n\t\tsvg.querySelectorAll('.layer').forEach(layer => {\n\t\t\tlet key = layer.getAttribute('data:name')\n\t\t\tlet type = layer.getAttribute('data:type')\n\t\t\tlet visible = false\n\n\t\t\t// first base or floor layer visible and current by default\n\t\t\tif (!first_done && (type == 'base' || type == 'floor')) {\n\t\t\t\tvisible = true\n\t\t\t\tfirst_done = true\n\t\t\t\tcurrent = true\n\t\t\t}\n\n\t\t\t// overlays are visible by default\n\t\t\tif (type == 'overlay') {\n\t\t\t\tvisible = true\n\t\t\t}\n\n\t\t\tlet d = {\n\t\t\t\tname: key,\n\t\t\t\ttype: type,\n\t\t\t\tvisible: visible\n\t\t\t}\n\t\t\t\n\t\t\t$layers.set(key, d)\n\n\t\t\tif (current) {\n\t\t\t\t$current_layer = d\n\t\t\t\tcurrent = false\n\t\t\t}\n\t\t})\n\n\t\t// enable d3 zoom\n\t\tzoom_behavior = d3.zoom()\n\t\t\t.scaleExtent([0, Infinity])\n\t\t\t.interpolate(interpolateZoom)\n\t\t\t.on('zoom', handleZoom)\n\n\t\td3.select(svg).call(zoom_behavior)\n\n\t\tfunction handleZoom() {\n\t\t\t$user_transform = d3.event.transform\n\t\t\tupdateGlobals()\n\t\t\tupdateLODElementsInSVG()\n\t\t}\n\n\t\t// focus to enable keyboard interaction\n\t\tsvg.focus()\n\n\t\t// update LOD-sensitive elements that are defined inside the SVG\n\t\tfunction updateLODElementsInSVG() {\n\t\t\tsvg.querySelectorAll('[data-lodrange]').forEach(elem => {\n\t\t\t\tlet lod_range = JSON.parse(elem.getAttribute('data-lodrange')).map(d => d == 'Infinity' ? Infinity : d)\n\t\t\t\tlet lod_visible = $user_transform.k >= lod_range[0] && $user_transform.k <= lod_range[1]\n\t\t\t\telem.setAttribute('visibility', lod_visible ? 'visible' : 'hidden')\n\t\t\t})\n\t\t}\n\n\t\tupdateGlobals()\n\t\tupdateLODElementsInSVG()\n\n\t\twindow.addEventListener('resize', function(event) {\n\t\t\tupdateGlobals()\n\t\t}, true)\n\n\t\t// listen to layer changes\n\t\tcurrent_layer.subscribe(handleNewLayer)\n\t})\n\n\tfunction updateGlobals() {\n\t\t$screen_size = svg.getBoundingClientRect()\n\t\tlet ctm = svg.getCTM()\n\t\t$screen_transform = d3.zoomIdentity.translate(ctm.e, ctm.f).scale(ctm.a)\n\n\n\t\t$zoom = $screen_transform.k * $user_transform.k\n\n\t\t$viewport = new DOMRect(\n\t\t\t(-$screen_transform.x/$screen_transform.k-$user_transform.x)/$user_transform.k,\n\t\t\t(-$screen_transform.y/$screen_transform.k-$user_transform.y)/$user_transform.k,\n\t\t\t$screen_size.width/$screen_transform.k/$user_transform.k,\n\t\t\t$screen_size.height/$screen_transform.k/$user_transform.k\n\t\t)\n\n\t\t\n\t\t// debounced update of settled globals\n\t\tclearTimeout(debounce_timeout)\n\n\t\tdebounce_timeout = setTimeout(function (event) {\n\t\t\t$settled_zoom = $zoom\n\t\t\t$settled_viewport = $viewport\n\t\t}, 300)\n\t}\n\n\tfunction scaleBy(k, duration) {\n\t\tduration = duration === undefined ? 300 : duration\n\t\tzoom_behavior.scaleBy(d3.select(svg).transition().duration(duration), k)\n\t}\n\n\tfunction scaleTo(k, duration) {\n\t\tduration = duration === undefined ? 300 : duration\n\t\tzoom_behavior.scaleTo(d3.select(svg).transition().duration(duration), k)\n\t}\n\n\tfunction translateBy(x, y, duration) {\n\t\tduration = duration === undefined ? 300 : duration\n\t\tzoom_behavior.translateBy(d3.select(svg).transition().duration(duration), x, y)\n\t}\n\n\tfunction translateTo(p, duration) {\n\t\tduration = duration === undefined ? 1200 : duration\n\t\tzoom_behavior.translateTo(d3.select(svg).transition().duration(duration), p.x, p.y)\n\t}\n\n\t// listen to selection changes\n\tselection.subscribe(handleNewSelection)\n\n\tfunction handleNewSelection(d) {\n\t\tif(d && d.position) {\n\t\t\ttranslateTo(d.position)\n\t\t}\n\t}\n\n\tasync function handleNewLayer(new_layer) {\n\t\t// wait for DOM to be synced\n\t\tawait (() => new Promise(requestAnimationFrame))()\n\t\t\n\t\t// hide or show layer-sensitive elements in SVG\n\t\tsvg.querySelectorAll('[data-inlayers]').forEach(elem => {\n\t\t\tlet in_layers = JSON.parse(elem.getAttribute('data-inlayers'))\n\t\t\tlet visible = in_layers.includes(new_layer.name)\n\t\t\telem.setAttribute('visibility', visible ? 'visible' : 'hidden')\n\t\t})\n\t}\n\n\tfunction handleKeyUp(e) {\n\t\tconst delta = 100 / $zoom\n\n\t\t// pan and zoom keyboard control\n\t\tswitch(e.key) {\n\t\t\tcase 'ArrowRight':\n\t\t\t\ttranslateBy(-delta,0)\n\t\t\t\tbreak\n\t\t\tcase 'ArrowLeft':\n\t\t\t\ttranslateBy(delta,0)\n\t\t\t\tbreak\n\t\t\tcase 'ArrowUp':\n\t\t\t\ttranslateBy(0,delta)\n\t\t\t\tbreak\n\t\t\tcase 'ArrowDown':\n\t\t\t\ttranslateBy(0,-delta)\n\t\t\t\tbreak\n\t\t\tcase '+':\n\t\t\t\tscaleBy(1.5)\n\t\t\t\tbreak\n\t\t\tcase '-':\n\t\t\t\tscaleBy(0.66)\n\t\t\t\tbreak\n\t\t}\n\t}\n</script>\n\n<style>\n\t.view {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tposition: fixed; /* needed to avoid jumping whenever the hash is changed */\n\t}\n\t.view:focus {\n\t\toutline: none;\n\t}\n</style>\n\n<svg class=\"view\" bind:this={svg} {viewBox} tabindex=\"0\" on:keyup={handleKeyUp}>\n\t<g transform={$user_transform}>\n\t\t<slot></slot>\n\t</g>\n</svg>",
    "<script>\n\timport * as d3 from 'd3'\n\n\timport { selection, select, selected_id, results } from 'anymapper'\n\timport { View, Layer, InfoBox, InfoBoxHeader, OmniBox, FloorLayersCtrl, SVGLayers, ResultsBox, Marker, Mark, Depiction, Placemark } from 'anymapper'\n\n\t// application-specific code\n\timport { rooms, pois, room_positions, people, search, getQualifica, getImmagine } from './storesCNR.js'\n\n\timport RoomInfo from './RoomInfo.svelte'\n\timport PersonInfo from './PersonInfo.svelte'\n\timport RoomPeopleList from './RoomPeopleList.svelte'\n\timport CNRResults from './CNRResults.svelte'\n\n\timport { Content } from '@smui/card'\n\t\n\tfunction postprocessLayers(layers) {\n\t\tlet new_room_positions = new Map()\n\t\tlayers.forEach((layer, layer_id) => {\n\t\t\td3.select(layer).selectAll('.selectable').each(function () {\n\t\t\t\tlet id = d3.select(this).attr('id')\n\t\t\t\tnew_room_positions.set( id, {...centroid(this), layers: new Set([layer_id])} )\n\t\t\t})\n\t\t\t$room_positions = new_room_positions\n\n\t\t\td3.select(layer).selectAll('.selectable').on('click', function () {\n\t\t\t\tlet id = d3.select(this).attr('id')\n\t\t\t\tselect(id)\n\t\t\t})\n\t\t})\n\t}\n\n\t// FIXME to be moved in utils\n\tfunction centroid(path) {\n\t\t// return the centroid of a given SVG path (considering vertexes only and ignoring curves)\n\t\tlet points = []\n\t\tpath.getPathData({normalize: true}).forEach(d => {\n\t\t\tif(d.type == 'Z')\n\t\t\t\treturn\n\n\t\t\t// last two values are always a point in M, C and L commands\n\t\t\tpoints.push({x: d.values[d.values.length-2], y: d.values[d.values.length-1]})\n\t\t})\n\t\t\n\t\t// centroid of vertexes\n\t\tlet sum_p = points.reduce(((a, p) => ({x: a.x+p.x, y: a.y+p.y})), {x: 0, y: 0})\n\t\treturn {x: sum_p.x/points.length, y: sum_p.y/points.length}\n\t}\n\n\tfunction updateSelection(_) {\n\t\tif($rooms.has($selected_id))\n\t\t\t$selection = $rooms.get($selected_id)\n\t\telse if($people.has($selected_id))\n\t\t\t$selection = $people.get($selected_id)\n\t\telse if($pois.has($selected_id))\n\t\t\t$selection = $pois.get($selected_id)\n\t\telse\n\t\t\t$selection = null\n\t}\n\n\tselected_id.subscribe(updateSelection)\n\trooms.subscribe(updateSelection)\n\n\tfunction handleSearch(e) {\n\t\t$results = search(e.detail.query)\n\t}\n\n\tconst category_colors = {\n\t\t'food_and_drinks': '#f57f17',\n\t\t'mobility': '#00b0ff',\n\t\t'emergency': '#db4437',\n\t\t'services': '#6b7de3',\n\t\t'commercial': '#5491f5',\n\t\t'entrance': '#f5f5f5'\n\t}\n\n</script>\n\n<style>\n\t/* FIXME? global deafults? */\n\t:global(html), :global(body) {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\toverflow: hidden;\n\t}\n\t.wrapper {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\toverflow-y: auto;\n\t\toverflow-x: hidden;\n\t\tposition: absolute;\n\t}\n\n\t:global(a), :global(a:hover), :global(a:visited) {\n\t\ttext-decoration: none;\n\t\tcolor: var(--primary-bg-color);\n\t}\n\t:global(a:hover) {\n\t\ttext-decoration: underline;\n\t}\n\n\t/* application-specific */\n\t\n\t/* define global CSS */\n\t:global(.infobox) {\n\t\twidth: 350px;\n\t}\n\t:global(.omnibox) {\n\t\twidth: 350px;\n\t}\n\t:global(.view) {\n\t\tbackground: #cedbb9;\n\t}\n\n\t:global(.selectable) {\n\t\tcursor: pointer;\n\t}\n\n\t:global(.room) {\n\t\tfill: #ffd993;\n\t\tstroke: #757575;\n\t\tstroke-width: 3.2;\n\t}\n\t:global(.room:hover) {\n\t\tfill: orange;\n\t}\n\t:global(.building_label) {\n\t\tfill: #757575;\n\t\tpointer-events: none;\n\t}\n\n\t.logo {\n\t\tposition: fixed;\n\t\tbottom: 20px;\n\t\tleft: calc(50% - var(--logo-width)/2);\n\t\twidth: var(--logo-width);\n\t\tpointer-events: none;\n\t\t--logo-width: 60px;\n\t}\n\tfooter {\n\t\tposition: fixed;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tfont-size: 10px;\n\t\tbackground: rgba(255,255,255,0.6);\n\t\tpadding: 2px;\n\t}\n\n\t:global(:root) {\n\t\t--infobox-header-height: 86px;\n\t\t--omnibox-margin: 10px;\n\t}\n</style>\n\n<div class=\"wrapper\">\n\n<View viewBox=\"1950 1400 5480 4770\">\n\t<SVGLayers\n\t\tpath=\"data/cnr_flat.svg\"\n\t\tnames=\"T 1 2 overlay\"\n\t\tmodes=\"floor floor floor overlay\"\n\t\tpostprocess={postprocessLayers}\n\t/>\n\t<Layer name=\"pois\">\n\t\t{#each Array.from($pois.values()) as poi}\n\t\t\t<Marker position={poi.position} on:click={() => select(poi.id) }>\n\t\t\t\t<Mark\n\t\t\t\t\ticon={poi.icon}\n\t\t\t\t\ttext={poi.text}\n\t\t\t\t\tfg={poi.category == 'entrance' ? '#0d5784' : undefined}\n\t\t\t\t\tbg={poi.category ? category_colors[poi.category] : undefined}\n\t\t\t\t\tshape={poi.shape}\n\t\t\t\t/>\n\t\t\t</Marker>\n\t\t{/each}\n\t</Layer>\n\t<Placemark icon={$selection && $selection.icon ? $selection.icon : $selection && $selection.type == 'person' ? 'person' : 'meeting_room'}/>\n</View>\n\n<FloorLayersCtrl/>\n\n<img src=\"assets/IIT+CNR-RGB-logos.svg\" alt=\"IIT-CNR logo\" class=\"logo\"/>\n\n<footer><a href=\"https://www.iit.cnr.it/privacy-policy/\">Privacy</a> - <a href=\"credits\">Credits</a> - Powered by <a href=\"https://github.com/webvis/anymapper\">anymapper</a>, by <a href=\"//hct.iit.cnr.it/\">HCT Lab</a> @<a href=\"//www.iit.cnr.it/\">CNR-IIT</a></footer>\n\n<OmniBox on:search={handleSearch}>\n\t<ResultsBox>\n\t\t<CNRResults/>\n\t</ResultsBox>\n</OmniBox>\n\n<InfoBox>\n\t{#if $selection.type == 'office'}\n\t\t<InfoBoxHeader title=\"{$selection.stanza}\" subtitle=\"Ufficio\"/>\n\t\t<Depiction src=\"assets/room_photos/{$selection.id}.jpg\" fallback=\"url(assets/room_photos/default_office.png)\"/>\n\t\t<RoomInfo/>\n\t\t<hr/>\n\t\t<RoomPeopleList/>\n\t{:else if $selection.type == 'room'}\n\t\t<InfoBoxHeader title=\"{$selection.id}\" subtitle=\"Stanza\"/>\n\t\t<Depiction src=\"assets/room_photos/{$selection.id}.jpg\" fallback=\"url(assets/room_photos/default_room.png)\"/>\n\t{:else if $selection.type == 'person'}\n\t\t<InfoBoxHeader title=\"{$selection.nome} {$selection.cognome}\" subtitle=\"{getQualifica($selection)}\"/>\n\t\t<Depiction src={getImmagine($selection)} size=\"contain\" fallback=\"url(assets/default_person.png)\"/>\n\t\t<PersonInfo/>\n\t\n\t\t{#if $selection.sede}\n\t\t\t<hr/>\n\t\t\t<Content>\n\t\t\t\t<table>\n\t\t\t\t\t<tr><td>Sede</td><td>{$selection.sede == \"pi\" ? \"Area della Ricerca di Pisa\" : $selection.sede == \"cs\" ? \"UOS Cosenza\" : \"\"}</td></tr>\n\t\t\t\t</table>\n\t\t\t</Content>\n\t\t{/if}\n\t\t\n\t\t{#if $selection.stanza}\n\t\t\t<hr/>\n\t\t\t<RoomInfo/>\n\t\t{/if}\n\t{:else if $selection.type == 'poi'}\n\t\t{#if $selection.category == 'entrance'}\n\t\t\t<InfoBoxHeader title=\"Ingresso {$selection.text}\" subtitle=\"Ingresso\"/>\n\t\t{:else if $selection.title}\n\t\t\t<InfoBoxHeader title={$selection.title} subtitle={$selection.subtitle || ''}/>\n\t\t{/if}\n\t{/if}\n</InfoBox>\n\n</div>",
    "<script>\n    import { results, select } from 'anymapper'\n    import { getQualifica } from './storesCNR.js'\n    \n    import List, {Item, Text, Graphic} from '@smui/list'\n</script>\n\n<style>\n    a, a:hover, a:visited {\n        color: inherit;\n        text-decoration: none;\n    }\n    :global(.cnr-results .mdc-list-item__graphic) {\n        margin-right: 16px;\n    }\n    .secondary {\n        margin-left: 4px;\n        color: var(--light-fg-color);\n    }\n</style>\n\n\n<List singleSelection class=\"cnr-results\">\n    {#each $results as r}\n        {#if r.type == 'person'}\n            <Item on:SMUI:action={() => select(r.email)}>\n                <Graphic class=\"material-icons\">person</Graphic>\n                <Text>{r.nome} {r.cognome} <span class=\"secondary\">{getQualifica(r)}</span></Text>\n            </Item>\n        {:else if r.type == 'office'}\n            <Item on:SMUI:action={() => select(r.id)}>\n                <Graphic class=\"material-icons\">meeting_room</Graphic>\n                <Text>{r.id} <span class=\"secondary\">Ufficio - Edificio {r.edificio}, Piano {r.piano}</span></Text>\n            </Item>\n        {:else if r.type == 'room'}\n            <Item on:SMUI:action={() => select(r.id)}>\n                <Graphic class=\"material-icons\">meeting_room</Graphic>\n                <Text>{r.id} <span class=\"secondary\">Stanza</span></Text>\n            </Item>\n        {/if}\n    {/each}\n</List>\n",
    "<script>\n    import { selection } from 'anymapper'\n    import { getQualifica, getImmagine } from './storesCNR.js'\n\n    import List, {Item, Graphic, Text, PrimaryText, SecondaryText} from '@smui/list'\n</script>\n\n<style>\n    a, a:hover, a:visited {\n        color: inherit;\n        text-decoration: none;\n    }\n</style>\n\n<List twoLine avatarList singleSelection>\n\t{#each $selection.people as person}\n        <a href=\"#{person.email}\">    \n            <Item>\n                <Graphic style=\"background: url({getImmagine(person)}), url(assets/default_person.png), rgb(245,245,245); background-position-x: center!important; background-size: cover!important; background-repeat: no-repeat!important;\" />\n                <Text>\n                    <PrimaryText>{person.nome} {person.cognome}</PrimaryText>\n                    <SecondaryText>{getQualifica(person)}</SecondaryText>\n                </Text>\n            </Item>\n        </a>\n    {/each}\n</List>"
  ],
  "names": [],
  "mappings": "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"
}